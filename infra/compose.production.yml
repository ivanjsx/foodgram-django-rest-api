name: foodgram

volumes:
  pg_data:
    name: foodgram-pg-data-production
  media_volume:
    name: foodgram-media
  static_volume:
    name: foodgram-static

networks:
  default:
    name: foodgram-default

services:
  
  db:
    image: postgres:16-alpine
    container_name: foodgram-db
    restart: always
    env_file: ../.env
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      timeout: 60s
      interval: 5s
      retries: 12
  
  backend:
    image: ivanjsx/foodgram-backend:latest
    container_name: foodgram-backend
    platform: "linux/amd64"
    restart: always
    env_file: ../.env
    volumes:
      - media_volume:/media
      - static_volume:/backend_static
    depends_on:
      db:
        condition: service_healthy
  
  frontend:
    image: ivanjsx/foodgram-frontend:latest
    container_name: foodgram-frontend
    platform: "linux/amd64"
    restart: on-failure
    command: cp -r /app/build/. /frontend_static
    volumes:
      - static_volume:/frontend_static
  
  gateway:
    image: ivanjsx/foodgram-gateway:latest
    container_name: foodgram-gateway
    platform: "linux/amd64"
    restart: always
    ports:
      - name: web
        host_ip: 127.0.0.1
        published: "3007"
        target: 80
    volumes:
      - media_volume:/media
      - static_volume:/static
    depends_on:
      - backend
